# Presentation Plan: Package Development At Johnson&Johnson

## Overview
This presentation covers the journey of transforming J&J Clinical & Statistical Programming standards from scripts to a suite of R packages, focusing on the development of the Junco package.

## Presentation Structure

### 1. Introduction
- **Title**: Package Development At Johnson&Johnson
- **Subtitle**: Challenges, Advances and Lessons Learned Going Into Production
- **Context**: Brief introduction to the need for standardized R packages in pharmaceutical research

### 2. Challenges in Pharmaceutical Programming
- **Subtitle**: Life in Pharma: Tables, Tables Everywhere
- **Key Points**:
  - Implementing patterns used across many table shells
  - Company-specific statistical methods that need standardization
  - Complex table structures requiring consistency
  - Need for a core framework for all company shells
  - Transition from scripts to robust, versionable packages

### 3. Advances with the Junco Package
- **Subtitle**: Shells Are Table Specific, Table Creation Is Not
- **Visual Aid**: Include graph1.png showing the conceptual framework
- **Key Points**:
  - Standardized approach to table creation
  - Separation of table-specific elements from general creation process

### 4. Junco Package Features
- **Key Points**:
  - True-type font support (word wrapping, pagination)
  - Production-ready RTF export
  - Higher order column counts
  - Utilities for spanning column headers
  - Guaranteed pathability in row space
  - Nearest-value (SAS-like) rounding support
  - Statistical calculations in accord with business logic
  - More robust approach for risk diff columns

### 5. From Scripts to Standardized Tools
- **Key Points**:
  - Code design and API for users
  - User-friendly interfaces
  - Consistent function design
  - Version control and collaboration

### 6. Documentation
- **Subtitle**: Making Your Package Accessible
- **Key Points**:
  - Using roxygen2 for function documentation
  - Using pkgdown for website generation
- **Visual Aid**: Iframe to Junco documentation page

### 7. Quality Assurance
- **Subtitle**: Unit Testing and Validation
- **Key Points**:
  - Importance of unit testing in pharmaceutical applications
  - Types of tests: unit, integration, regression
  - Validation documentation for regulatory requirements
- **Visual Aid**: Iframe to junit test report

### 8. Continuous Integration and Deployment
- **Key Points**:
  - Automating quality checks
  - Benefits of CI/CD in reducing manual work
  - Components: automated testing, code coverage, style checking, documentation building
- **Visual Aid**: Iframe to GitHub Actions CI/CD checks

### 9. Resources
- **Subtitle**: The Junco Package
- **Visual Aid**: Junco logo
- **Key Points**:
  - Links to documentation, GitHub repository, and CRAN page
  - Additional resources for R package development

## Visual Aids and Their Placement
1. **graph1.png**: Section 3 - Advances with the Junco Package
2. **Junco Documentation Iframe**: Section 6 - Documentation
3. **Unit Test Report Iframe**: Section 7 - Quality Assurance
4. **CI/CD Checks Iframe**: Section 8 - Continuous Integration and Deployment
5. **Junco Logo**: Section 9 - Resources

## Key Takeaways
1. Pharmaceutical programming requires standardized approaches to table creation
2. The Junco package provides a robust framework for clinical table generation
3. Moving from scripts to packages involves attention to:
   - User experience and API design
   - Documentation and accessibility
   - Testing and validation
   - Continuous integration and deployment
4. Open-source tools and practices can be effectively applied in pharmaceutical contexts

## Resources and References
- Junco Documentation: https://johnsonandjohnson.github.io/junco/
- Junco GitHub Repository: https://github.com/johnsonandjohnson/junco/
- Junco on CRAN (v0.1.1): https://cran.r-project.org/package=junco
- Unit Test Report: https://johnsonandjohnson.github.io/junco/unit-test-report-non-cran/
- CI/CD Checks: https://github.com/johnsonandjohnson/junco/pull/53/checks